---
name: 4 input AND
invariant under single move: no
invariant under multiple moves: no
Ni: 4
'No': 1
gates: 
    - [0, 1, 7]
    - [2, 3, 7]
    - [4, 4, 7]
    - [5, 5, 7]
    - [6, 7, 7]
    - [8, 8, 7]
max depths: [4]
# state can be extracted from full state table
samples: [2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15]
target function: unary_and
target matrix:
    full:
        - [0]
        - [0]
        - [0]
        - [0]
        - [0]
        - [0]
        - [0]
        - [0]
        - [0]
        - [0]
        - [0]
        - [0]
        - [0]
        - [0]
        - [0]
        - [1]
activation matrix:   
# includes input (first Ni cols) and output (last No cols)
    full:
        - [0, 0, 0, 0, 1, 1, 0, 0, 1, 0]
        - [1, 0, 0, 0, 1, 1, 0, 0, 1, 0]
        - [0, 1, 0, 0, 1, 1, 0, 0, 1, 0]
        - [1, 1, 0, 0, 0, 1, 1, 0, 1, 0]
        - [0, 0, 1, 0, 1, 1, 0, 0, 1, 0]
        - [1, 0, 1, 0, 1, 1, 0, 0, 1, 0]
        - [0, 1, 1, 0, 1, 1, 0, 0, 1, 0]
        - [1, 1, 1, 0, 0, 1, 1, 0, 1, 0]
        - [0, 0, 0, 1, 1, 1, 0, 0, 1, 0]
        - [1, 0, 0, 1, 1, 1, 0, 0, 1, 0]
        - [0, 1, 0, 1, 1, 1, 0, 0, 1, 0]
        - [1, 1, 0, 1, 0, 1, 1, 0, 1, 0]
        - [0, 0, 1, 1, 1, 0, 0, 1, 1, 0]
        - [1, 0, 1, 1, 1, 0, 0, 1, 1, 0]
        - [0, 1, 1, 1, 1, 0, 0, 1, 1, 0]
        - [1, 1, 1, 1, 0, 0, 1, 1, 0, 1]
error matrix: 
    full:
        - [0]
        - [0]
        - [0]
        - [0]
        - [0]
        - [0]
        - [0]
        - [0]
        - [0]
        - [0]
        - [0]
        - [0]
        - [0]
        - [0]
        - [0]
        - [0]
instances:
    sample:
         - {function: e1, order: lsb, value: 0.0}
         - {function: e2, order: msb, value: 0.0}
         - {function: e2, order: lsb, value: 0.0}
         - {function: e3, order: msb, value: 0.0}
         - {function: e3, order: lsb, value: 0.0}
         - {function: e7, order: msb, value: 0.0}
         - {function: e7, order: lsb, value: 0.0}
         - {function: e4, order: msb, value: 0.0}
         - {function: e4, order: lsb, value: 0.0}
         - {function: e5, order: msb, value: 0.0}
         - {function: e5, order: lsb, value: 0.0}
         - {function: e6, order: msb, value: 0.0}
         - {function: e6, order: lsb, value: 0.0}
         - {function: accuracy, order: lsb, value: 1.0}
         - {function: e1_mcc, order: lsb, value: 1.0}
         - {function: per_output_error, order: lsb, value: [0.0]}
         - {function: per_output_mcc, order: lsb, value: [1.0]}
    test:
         - {function: e1, order: lsb, value: 0.0}
         - {function: e2, order: msb, value: 0.0}
         - {function: e2, order: lsb, value: 0.0}
         - {function: e3, order: msb, value: 0.0}
         - {function: e3, order: lsb, value: 0.0}
         - {function: e7, order: msb, value: 0.0}
         - {function: e7, order: lsb, value: 0.0}
         - {function: e4, order: msb, value: 0.0}
         - {function: e4, order: lsb, value: 0.0}
         - {function: e5, order: msb, value: 0.0}
         - {function: e5, order: lsb, value: 0.0}
         - {function: e6, order: msb, value: 0.0}
         - {function: e6, order: lsb, value: 0.0}
         - {function: accuracy, order: lsb, value: 1.0}
         - {function: e1_mcc, order: lsb, value: 1.0}
         - {function: per_output_error, order: lsb, value: [0.0]}
         - {function: per_output_mcc, order: lsb, value: [1.0]}
    full:
         - {function: e1, order: lsb, value: 0.0}
         - {function: e2, order: msb, value: 0.0}
         - {function: e2, order: lsb, value: 0.0}
         - {function: e3, order: msb, value: 0.0}
         - {function: e3, order: lsb, value: 0.0}
         - {function: e7, order: msb, value: 0.0}
         - {function: e7, order: lsb, value: 0.0}
         - {function: e4, order: msb, value: 0.0}
         - {function: e4, order: lsb, value: 0.0}
         - {function: e5, order: msb, value: 0.0}
         - {function: e5, order: lsb, value: 0.0}
         - {function: e6, order: msb, value: 0.0}
         - {function: e6, order: lsb, value: 0.0}
         - {function: accuracy, order: lsb, value: 1.0}
         - {function: e1_mcc, order: lsb, value: 1.0}
         - {function: per_output_error, order: lsb, value: [0.0]}
         - {function: per_output_mcc, order: lsb, value: [1.0]}